version: "3.9"
services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
    depends_on:
      - alertmanager
#      - mysqld-exporter
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
    ports:
      - '9090:9090'
    restart: unless-stopped
  
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    command: ['--config.file=/etc/alertmanager/alertmanager.yml']
    ports:
      - '9093:9093'
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    restart: unless-stopped

  #mysqld-exporter:
    #image: prom/mysqld-exporter:latest
    #container_name: mysqld-exporter
    #command:
      #- '--config.my-cnf=/etc/mysqld_exporter/.my.cnf'
    #volumes:
      #- ./mysqld-exporter/.my.cnf:/etc/mysqld_exporter/.my.cnf:ro
    #environment:
      #- DATA_SOURCE_NAME=exporter:exporter_pass@(host.docker.internal:3306)/
    #ports:
      #- '9104:9104'
    #restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - C:\Users\wisecan\Desktop\min\grafana\grafana.ini:/etc/grafana/grafana.ini:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    
    # === 추가: Redis ===
  redis:
    image: redis:7-alpine
    container_name: redis
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD:-redispass}"]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redispass}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redispass}", "PING"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # === 추가: Redis Exporter(프로메테우스용) ===
  redis-exporter:
    image: oliver006/redis_exporter:v1.62.0
    container_name: redis-exporter
    environment:
      - REDIS_ADDR=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redispass}
    ports:
      - "9121:9121"
    depends_on:
      - redis
    restart: unless-stopped
    
volumes:
  grafana-data:
  redis-data: